#!/usr/local/bin/python3
# coding: utf-8

# ytdlbot - constant.py
# 8/16/21 16:59
#

__author__ = "Peyman"

import os

from config import (
    AFD_LINK,
    COFFEE_LINK,
    ENABLE_CELERY,
    FREE_DOWNLOAD,
    REQUIRED_MEMBERSHIP,
    TOKEN_PRICE,
)
from database import InfluxDB
from utils import get_func_queue


class BotText:
    start ="welcome send /help for help"
    help = f"""bot is working correctly please wait

coded by @l3lackvpn

üí¢ ÿØÿ≥ÿ™Ÿàÿ±ÿßÿ™
/start
/help
/settings
/about
    """


    private = "This bot is for private use"

    settings = """
ŸÑÿ∑ŸÅÿßŸã ŸÅÿ±ŸÖÿ™ Ÿà ⁄©€åŸÅ€åÿ™ ŸÖŸàÿ±ÿØ ŸÜÿ∏ÿ± ÿ®ÿ±ÿß€å Ÿà€åÿØ€åŸà€å ÿÆŸàÿØ ÿ±ÿß ÿßŸÜÿ™ÿÆÿßÿ® ⁄©ŸÜ€åÿØ. ÿ™Ÿàÿ¨Ÿá ÿØÿßÿ¥ÿ™Ÿá ÿ®ÿßÿ¥€åÿØ ⁄©Ÿá ÿß€åŸÜ ÿ™ŸÜÿ∏€åŸÖÿßÿ™ ŸÅŸÇÿ∑ ÿ®ÿ±ÿß€å Ÿà€åÿØ€åŸàŸáÿß€å €åŸàÿ™€åŸàÿ® ÿßÿπŸÖÿßŸÑ ŸÖ€å‚Äåÿ¥ŸàŸÜÿØ.

⁄©€åŸÅ€åÿ™ ÿ®ÿßŸÑÿß ÿ™Ÿàÿµ€åŸá ŸÖ€å‚Äåÿ¥ŸàÿØ. ⁄©€åŸÅ€åÿ™ ŸÖÿ™Ÿàÿ≥ÿ∑ ŸÖÿπÿßÿØŸÑ 720P ÿßÿ≥ÿ™ÿå ÿØÿ± ÿ≠ÿßŸÑ€å ⁄©Ÿá ⁄©€åŸÅ€åÿ™ Ÿæÿß€å€åŸÜ ŸÖÿπÿßÿØŸÑ 480P ŸÖ€å‚Äåÿ®ÿßÿ¥ÿØ.

ŸÑÿ∑ŸÅÿßŸã ÿ®Ÿá €åÿßÿØ ÿØÿßÿ¥ÿ™Ÿá ÿ®ÿßÿ¥€åÿØ ⁄©Ÿá ÿß⁄Øÿ± ÿßŸÜÿ™ÿÆÿßÿ® ⁄©ŸÜ€åÿØ Ÿà€åÿØ€åŸà ÿ±ÿß ÿ®Ÿá ÿπŸÜŸàÿßŸÜ €å⁄© ÿ≥ŸÜÿØ ÿßÿ±ÿ≥ÿßŸÑ ⁄©ŸÜ€åÿØÿå ÿßŸÖ⁄©ÿßŸÜ ÿßÿ≥ÿ™ÿ±€åŸÖ ÿ¢ŸÜ Ÿàÿ¨ŸàÿØ ŸÜÿØÿßÿ±ÿØ.

ÿ™ŸÜÿ∏€åŸÖÿßÿ™ ŸÅÿπŸÑ€å ÿ¥ŸÖÿß:
⁄©€åŸÅ€åÿ™ Ÿà€åÿØ€åŸà: {0}
ŸÅÿ±ŸÖÿ™ ÿßÿ±ÿ≥ÿßŸÑ: {1}
"""
    custom_text = os.getenv("CUSTOM_TEXT", "")

    @staticmethod
    def get_receive_link_text() -> str:
        reserved = get_func_queue("reserved")
        if ENABLE_CELERY and reserved:
            text = f"more request than you can please wait {reserved}."
        else:
            text = "Your request has been added please wait"

        return text

    @staticmethod
    def ping_worker() -> str:
        from tasks import app as celery_app

        workers = InfluxDB().extract_dashboard_data()
        # [{'celery@Benny„ÅÆMBP': 'abc'}, {'celery@Benny„ÅÆMBP': 'abc'}]
        response = celery_app.control.broadcast("ping_revision", reply=True)
        revision = {}
        for item in response:
            revision.update(item)

        text = ""
        for worker in workers:
            fields = worker["fields"]
            hostname = worker["tags"]["hostname"]
            status = {True: "‚úÖ"}.get(fields["status"], "‚ùå")
            active = fields["active"]
            load = "{},{},{}".format(fields["load1"], fields["load5"], fields["load15"])
            rev = revision.get(hostname, "")
            text += f"{status}{hostname} **{active}** {load} {rev}\n"

        return text
